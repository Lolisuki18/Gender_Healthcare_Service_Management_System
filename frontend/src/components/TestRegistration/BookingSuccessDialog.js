import React from 'react';
import PropTypes from 'prop-types';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  Zoom,
  Chip
} from '@mui/material';
import { styled, keyframes } from '@mui/material/styles';
import CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';
import CalendarTodayIcon from '@mui/icons-material/CalendarToday';
import PhoneIcon from '@mui/icons-material/Phone';

// ===== ƒê·ªäNH NGHƒ®A C√ÅC HI·ªÜU ·ª®NG ƒê·ªòNG =====
// C√°c keyframes n√†y t·∫°o ra c√°c animation ƒë·∫πp m·∫Øt cho dialog

// Hi·ªáu ·ª©ng nh·∫•p nh√°y v√† ph√¨nh to cho icon th√†nh c√¥ng - t·∫°o s·ª± ch√∫ √Ω v√†o th√¥ng b√°o th√†nh c√¥ng
const successPulse = keyframes`
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(74, 144, 226, 0.7);
  }
  70% {
    transform: scale(1.05);
    box-shadow: 0 0 0 20px rgba(74, 144, 226, 0);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(74, 144, 226, 0);
  }
`;

// Hi·ªáu ·ª©ng l∆° l·ª≠ng l√™n xu·ªëng - t·∫°o c·∫£m gi√°c nh·∫π nh√†ng, kh√¥ng gian cho dialog
const floatAnimation = keyframes`
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
`;

// Hi·ªáu ·ª©ng r∆°i v√† xoay c·ªßa c√°c ch·∫•m tr√≤n trang tr√≠ (confetti) - t·∫°o kh√¥ng kh√≠ vui t∆∞∆°i, ƒÉn m·ª´ng
const confettiFloat = keyframes`
  0% {
    transform: translateY(0px) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
`;

// Hi·ªáu ·ª©ng nh·∫•p nh√°y c·ªßa c√°c ng√¥i sao - t·∫°o ƒëi·ªÉm nh·∫•n l·∫•p l√°nh cho dialog
const sparkle = keyframes`
  0%, 100% {
    opacity: 0;
    transform: scale(0);
  }
  50% {
    opacity: 1;
    transform: scale(1);
  }
`;

// ===== ƒê·ªäNH NGHƒ®A C√ÅC STYLED COMPONENTS =====
// Nh·ªØng component ƒë∆∞·ª£c custom h√≥a ƒë·ªÉ c√≥ giao di·ªán ƒë·∫πp v√† hi·ªáu ·ª©ng ƒë·ªông

// Dialog v·ªõi thi·∫øt k·∫ø ƒë·∫πp m·∫Øt, bo g√≥c v√† hi·ªáu ·ª©ng gradient
const StyledDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialog-paper': {
    borderRadius: 24, // Bo g√≥c 24px ƒë·ªÉ t·∫°o c·∫£m gi√°c m·ªÅm m·∫°i, hi·ªán ƒë·∫°i
    background: 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)', // Gradient n·ªÅn tr·∫Øng nh·∫π - t·∫°o ƒë·ªô s√¢u
    boxShadow: '0 25px 80px rgba(0, 0, 0, 0.15)', // ƒê·ªï b√≥ng m·∫°nh ƒë·ªÉ dialog n·ªïi b·∫≠t
    overflow: 'visible', // Cho ph√©p c√°c element trang tr√≠ tr√†n ra ngo√†i
    position: 'relative',
    // T·∫°o vi·ªÅn gradient xanh l√° m·ªù ·ªü ngo√†i - t·∫°o hi·ªáu ·ª©ng vi·ªÅn ph√°t s√°ng nh·∫π
    '&::before': {
      content: '""',
      position: 'absolute',
      top: -2,
      left: -2,
      right: -2,
      bottom: -2,
      background: 'linear-gradient(135deg, #22c55e, #16a34a)',
      borderRadius: 26,
      zIndex: -1,
      opacity: 0.1,
    }
  }
}));

// Icon check th√†nh c√¥ng v·ªõi hi·ªáu ·ª©ng nh·∫•p nh√°y v√† ƒë·ªï b√≥ng - bi·ªÉu t∆∞·ª£ng ch√≠nh c·ªßa th√†nh c√¥ng
const SuccessIcon = styled(CheckCircleRoundedIcon)(({ theme }) => ({
  fontSize: 120, // K√≠ch th∆∞·ªõc icon l·ªõn ƒë·ªÉ thu h√∫t s·ª± ch√∫ √Ω
  color: '#4A90E2', // M√†u xanh d∆∞∆°ng ƒë·∫πp m·∫Øt
  animation: `${successPulse} 2s infinite`, // √Åp d·ª•ng hi·ªáu ·ª©ng nh·∫•p nh√°y li√™n t·ª•c
  filter: 'drop-shadow(0 8px 16px rgba(74, 144, 226, 0.3))', // ƒê·ªï b√≥ng m√†u xanh ƒë·ªÉ t·∫°o ƒë·ªô s√¢u
}));

// Element c√≥ hi·ªáu ·ª©ng l∆° l·ª≠ng - t·∫°o c·∫£m gi√°c nh·∫π nh√†ng cho to√†n b·ªô dialog
const FloatingElement = styled(Box)(({ theme }) => ({
  animation: `${floatAnimation} 3s ease-in-out infinite`, // Hi·ªáu ·ª©ng l∆° l·ª≠ng m·ªÅm m·∫°i 3 gi√¢y
}));

// Button v·ªõi hi·ªáu ·ª©ng gradient v√† hover ƒë·∫πp m·∫Øt - n√∫t ch√≠nh c·ªßa dialog
const GradientButton = styled(Button)(({ theme }) => ({
  background: 'linear-gradient(45deg, #4A90E2 0%, #1ABC9C 100%)', // Gradient xanh d∆∞∆°ng sang xanh ng·ªçc
  borderRadius: 16, // Bo g√≥c 16px ƒë·ªÉ h√†i h√≤a v·ªõi dialog
  padding: '12px 32px',
  fontSize: '1.1rem',
  fontWeight: 600,
  textTransform: 'none', // Kh√¥ng vi·∫øt hoa ƒë·ªÉ t·ª± nhi√™n h∆°n
  color: '#ffffff',
  boxShadow: '0 8px 24px rgba(74, 144, 226, 0.25)', // ƒê·ªï b√≥ng nh·∫π ƒë·ªÉ n√∫t n·ªïi b·∫≠t
  transition: 'all 0.3s ease', // Hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªïi m∆∞·ª£t m√†
  '&:hover': { // Khi hover chu·ªôt
    background: 'linear-gradient(45deg, #1ABC9C 0%, #4A90E2 100%)', // ƒê·∫£o ng∆∞·ª£c gradient
    transform: 'translateY(-2px)', // N√¢ng l√™n 2px t·∫°o hi·ªáu ·ª©ng 3D
    boxShadow: '0 12px 32px rgba(74, 144, 226, 0.35)', // TƒÉng ƒë·ªï b√≥ng khi hover
  },
  '&:active': { // Khi nh·∫•n
    transform: 'translateY(0px)', // Tr·ªü v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu
  }
}));

// ===== COMPONENT CH√çNH =====
// Component dialog th√¥ng b√°o ƒë·∫∑t l·ªãch th√†nh c√¥ng v·ªõi giao di·ªán ƒë·∫πp m·∫Øt v√† nhi·ªÅu hi·ªáu ·ª©ng
const BookingSuccessDialog = ({ open, message, onClose }) => {
  return (
    <StyledDialog 
      open={open} 
      onClose={onClose} 
      maxWidth="sm" 
      fullWidth
      TransitionComponent={Zoom} // Hi·ªáu ·ª©ng zoom khi m·ªü/ƒë√≥ng dialog
      transitionDuration={{
        enter: 600, // 600ms ƒë·ªÉ m·ªü dialog m·ªôt c√°ch m∆∞·ª£t m√†
        exit: 400,  // 400ms ƒë·ªÉ ƒë√≥ng dialog nhanh h∆°n
      }}
    >
      {/* ===== C√ÅC ELEMENT TRANG TR√ç N·ªÄN ===== */}
      {/* T·∫°o kh√¥ng gian th·ªã gi√°c ƒë·∫πp m·∫Øt cho dialog */}
      
      {/* H√¨nh tr√≤n l·ªõn ·ªü g√≥c tr√™n ph·∫£i - t·∫°o ƒëi·ªÉm nh·∫•n m√†u s·∫Øc */}
      <Box
        sx={{
          position: 'absolute',
          width: 200,
          height: 200,
          borderRadius: '50%',
          background: 'radial-gradient(circle, rgba(74,144,226,0.08) 0%, rgba(255,255,255,0) 70%)',
          top: -50,
          right: -50,
          zIndex: 0,
          pointerEvents: 'none', // Kh√¥ng th·ªÉ click ƒë·ªÉ kh√¥ng c·∫£n tr·ªü t∆∞∆°ng t√°c
        }}
      />
      
      {/* H√¨nh tr√≤n nh·ªè ·ªü g√≥c d∆∞·ªõi tr√°i - c√¢n b·∫±ng b·ªë c·ª•c */}
      <Box
        sx={{
          position: 'absolute',
          width: 150,
          height: 150,
          borderRadius: '50%',
          background: 'radial-gradient(circle, rgba(26,188,156,0.06) 0%, rgba(255,255,255,0) 70%)',
          bottom: -30,
          left: -30,
          zIndex: 0,
          pointerEvents: 'none',
        }}
      />

      {/* ===== HI·ªÜU ·ª®NG CONFETTI ===== */}
      {/* C√°c ch·∫•m tr√≤n r∆°i trang tr√≠ t·∫°o kh√¥ng kh√≠ ƒÉn m·ª´ng */}
      {[...Array(8)].map((_, i) => ( // T·∫°o 8 ch·∫•m tr√≤n v·ªõi v·ªã tr√≠ v√† m√†u s·∫Øc kh√°c nhau
        <Box
          key={i}
          sx={{
            position: 'absolute',
            width: 8,
            height: 8,
            background: i % 2 === 0 ? '#4A90E2' : '#1ABC9C', // Xen k·∫Ω m√†u xanh d∆∞∆°ng v√† xanh ng·ªçc
            borderRadius: '50%',
            top: `${20 + i * 8}%`, // V·ªã tr√≠ theo chi·ªÅu d·ªçc - ph√¢n b·ªë ƒë·ªÅu
            left: `${10 + i * 10}%`, // V·ªã tr√≠ theo chi·ªÅu ngang - t·∫°o ƒë∆∞·ªùng ch√©o
            animation: `${confettiFloat} ${2 + i * 0.3}s ease-in-out infinite`, // Hi·ªáu ·ª©ng r∆°i v·ªõi th·ªùi gian kh√°c nhau
            animationDelay: `${i * 0.2}s`, // Delay kh√°c nhau cho t·ª´ng ch·∫•m ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng l·ªách th·ªùi gian
            zIndex: 0,
            pointerEvents: 'none',
          }}
        />
      ))}

      {/* ===== HI·ªÜU ·ª®NG NG√îI SAO NH·∫§P NH√ÅY ===== */}
      {/* T·∫°o ƒëi·ªÉm nh·∫•n l·∫•p l√°nh cho dialog */}
      {[...Array(6)].map((_, i) => ( // T·∫°o 6 ng√¥i sao v·ªõi hi·ªáu ·ª©ng nh·∫•p nh√°y
        <Box
          key={`sparkle-${i}`}
          sx={{
            position: 'absolute',
            width: 4,
            height: 4,
            background: '#ffd700', // M√†u v√†ng ƒë·∫πp m·∫Øt
            borderRadius: '50%',
            top: `${30 + i * 12}%`,
            right: `${15 + i * 8}%`,
            animation: `${sparkle} ${1.5 + i * 0.2}s ease-in-out infinite`,
            animationDelay: `${i * 0.3}s`, // Delay kh√°c nhau ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng l·∫•p l√°nh ng·∫´u nhi√™n
            zIndex: 0,
            pointerEvents: 'none',
            // T·∫°o h√¨nh d·∫•u + cho ng√¥i sao - l√†m cho gi·ªëng ng√¥i sao th·∫≠t h∆°n
            '&::before': {
              content: '""',
              position: 'absolute',
              width: '200%',
              height: '2px',
              background: '#ffd700',
              top: '50%',
              left: '-50%',
              transform: 'translateY(-50%)',
            },
            '&::after': {
              content: '""',
              position: 'absolute',
              width: '2px',
              height: '200%',
              background: '#ffd700',
              left: '50%',
              top: '-50%',
              transform: 'translateX(-50%)',
            }
          }}
        />
      ))}

      {/* ===== PH·∫¶N HEADER DIALOG ===== */}
      <DialogTitle sx={{ pb: 2, pt: 4, position: 'relative', zIndex: 1 }}>
        <FloatingElement>
          <Box 
            display="flex" 
            alignItems="center" 
            justifyContent="center"
            flexDirection="column"
          >
            {/* Icon th√†nh c√¥ng ch√≠nh */}
            <SuccessIcon />
            
            {/* Ti√™u ƒë·ªÅ ch√≠nh v·ªõi gradient text */}
            <Typography 
              variant="h4"
              sx={{
                fontWeight: 800,
                background: 'linear-gradient(45deg, #4A90E2 0%, #1ABC9C 100%)', // Gradient text ƒë·∫πp m·∫Øt
                backgroundClip: 'text',
                WebkitBackgroundClip: 'text',
                WebkitTextFillColor: 'transparent', // L√†m cho text hi·ªÉn th·ªã gradient
                textAlign: 'center',
                mt: 2,
                mb: 1,
                fontSize: { xs: '1.8rem', md: '2.2rem' }, // Responsive font size
                letterSpacing: '-0.5px' // ƒêi·ªÅu ch·ªânh spacing gi·ªØa c√°c ch·ªØ
              }}
            >
              üéâ ƒê·∫∑t l·ªãch th√†nh c√¥ng!
            </Typography>
            
            {/* Subtitle m√¥ t·∫£ */}
            <Typography 
              variant="subtitle1"
              sx={{
                color: 'text.secondary',
                textAlign: 'center',
                fontWeight: 500,
                opacity: 0.8 // L√†m m·ªù nh·∫π ƒë·ªÉ t·∫°o hierarchy
              }}
            >
              C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng ch√∫ng t√¥i
            </Typography>
          </Box>
        </FloatingElement>
      </DialogTitle>

      {/* ===== PH·∫¶N N·ªòI DUNG DIALOG ===== */}
      <DialogContent sx={{ pt: 1, pb: 2, position: 'relative', zIndex: 1 }}>
        {/* Box ch·ª©a th√¥ng ƒëi·ªáp ch√≠nh v·ªõi background gradient ƒë·∫πp m·∫Øt */}
        <Box
          sx={{
            background: 'linear-gradient(135deg, rgba(74,144,226,0.05) 0%, rgba(26,188,156,0.05) 100%)', // Gradient nh·∫π
            borderRadius: 4, // Bo g√≥c m·ªÅm m·∫°i
            p: 3,
            mb: 3,
            border: '1px solid rgba(74,144,226,0.1)', // Vi·ªÅn m·ªèng ƒë·∫πp m·∫Øt
            backdropFilter: 'blur(10px)', // Hi·ªáu ·ª©ng blur cho background
          }}
        >
          {/* Th√¥ng ƒëi·ªáp ch√≠nh */}
          <Typography 
            variant="body1" 
            align="center"
            sx={{
              fontSize: '1.1rem',
              color: 'text.primary',
              lineHeight: 1.7, // Line height tho·∫£i m√°i ƒë·ªÉ ƒë·ªçc
              fontWeight: 500,
              mb: 2
            }}
          >
            {message || 'L·ªãch h·∫πn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n th√†nh c√¥ng!'}
          </Typography>
          
          {/* C√°c th√¥ng tin b·ªï sung d∆∞·ªõi d·∫°ng chips */}
          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 3 }}>
            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 2 }}>
              {/* Chip th√¥ng b√°o x√°c nh·∫≠n */}
              <Chip
                icon={<CalendarTodayIcon />}
                label="Ch√∫ng t√¥i s·∫Ω li√™n h·ªá x√°c nh·∫≠n"
                variant="outlined"
                sx={{
                  borderColor: 'rgba(74,144,226,0.3)',
                  color: '#4A90E2',
                  fontWeight: 600,
                  '& .MuiChip-icon': {
                    color: '#4A90E2'
                  }
                }}
              />
            </Box>
            
            {/* Chip th√¥ng tin li√™n h·ªá */}
            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 2 }}>
              <Chip
                icon={<PhoneIcon />}
                label="Qua ƒëi·ªán tho·∫°i ho·∫∑c email"
                variant="outlined"
                sx={{
                  borderColor: 'rgba(74,144,226,0.3)',
                  color: '#4A90E2',
                  fontWeight: 600,
                  '& .MuiChip-icon': {
                    color: '#4A90E2'
                  }
                }}
              />
            </Box>
          </Box>
        </Box>

        {/* L·ªùi c·∫£m ∆°n cu·ªëi */}
        <Typography 
          variant="body2" 
          align="center"
          sx={{
            fontSize: '0.95rem',
            color: 'text.secondary',
            fontStyle: 'italic',
            opacity: 0.7 // L√†m m·ªù nh·∫π ƒë·ªÉ t·∫°o ƒëi·ªÉm nh·∫•n kh√°c bi·ªát
          }}
        >
          üíö C·∫£m ∆°n b·∫°n ƒë√£ ch·ªçn d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!
        </Typography>
      </DialogContent>

      {/* ===== PH·∫¶N FOOTER V·ªöI N√öT ƒê√ìNG ===== */}
      <DialogActions sx={{ px: 4, pb: 4, position: 'relative', zIndex: 1 }}>
        {/* N√∫t ƒë√≥ng dialog v·ªõi hi·ªáu ·ª©ng gradient ƒë·∫πp m·∫Øt */}
        <GradientButton 
          onClick={onClose} 
          fullWidth
        >
          ‚ú® Ho√†n t·∫•t
        </GradientButton>
      </DialogActions>
    </StyledDialog>
  );
};

// ===== ƒê·ªäNH NGHƒ®A PROP TYPES ===== 
// X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu cho c√°c props c·ªßa component ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh ch√≠nh x√°c
BookingSuccessDialog.propTypes = {
  open: PropTypes.bool.isRequired, // B·∫Øt bu·ªôc: tr·∫°ng th√°i m·ªü/ƒë√≥ng dialog
  message: PropTypes.string, // T√πy ch·ªçn: th√¥ng ƒëi·ªáp t√πy ch·ªânh ƒë·ªÉ hi·ªÉn th·ªã
  onClose: PropTypes.func.isRequired, // B·∫Øt bu·ªôc: h√†m callback khi ƒë√≥ng dialog
};

// Export component ƒë·ªÉ s·ª≠ d·ª•ng ·ªü n∆°i kh√°c
export default BookingSuccessDialog;
